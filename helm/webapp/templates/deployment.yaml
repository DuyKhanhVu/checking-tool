apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "web-app.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "web-app.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  {{- with .Values.webapp.annotations }}
  annotations:
    {{ toYaml . | indent 4 | trim }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "web-app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "web-app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.webapp.annotations }}
      annotations:
        {{ toYaml . | indent 8 | trim }}
      {{- end }}
    spec:
      containers:
        {{- range $containerName, $container := .Values }}
        {{- $dictType := kindOf (dict) }}
        {{- if kindIs $dictType $container }}
        {{- if hasKey $container "image" }}
        - name: {{ $containerName }}
          image: "{{ $container.image.repository }}:{{ $container.image.tag }}"
          imagePullPolicy: {{ $container.image.pullPolicy }}
          {{- with $container.env }}
          env:
            {{- range $envName, $envValue := . }}
            - name: {{ $envName }}
              {{ toYaml $envValue | indent 14 | trim }}
            {{- end }}
          {{- end }}
          {{ $containerSpec := pick $container "args" "command" "envFrom" "lifecycle" "livenessProbe" "ports" "readinessProbe" "resources" "securityContext" "stdin" "stdinOnce" "terminationMessagePath" "terminationMessagePolicy" "tty" "volumeDevices" "volumeMounts" "workingDir" }}
          {{ toYaml $containerSpec | indent 10 | trim }}
        {{- end }}
        {{- end }}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}

      {{- with .Values }}
      {{- $podSpec := pick . "activeDeadlineSeconds" "automountServiceAccountToken" "dnsConfig" "dnsPolicy" "hostAliases" "hostIPC" "hostNetwork" "hostPID" "hostname" "imagePullSecrets" "initContainers" "nodeName" "priority" "priorityClassName" "restartPolicy" "schedulerName" "securityContext" "serviceAccount" "serviceAccountName" "shareProcessNamespace" "subdomain" "terminationGracePeriodSeconds" "volumes"}}
      {{ toYaml $podSpec | indent 6 | trim }}
      {{- end }}
